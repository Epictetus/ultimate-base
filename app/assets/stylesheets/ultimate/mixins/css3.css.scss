// Use compatibility tables from http://caniuse.com/
// http://css3pie.com/documentation/supported-css3-features/#pie-watch-ancestors
// http://css3pie.com/documentation/supported-css3-features/#pie-lazy-init

$pie-url: "polyfills/PIE.htc";
$boxsizing-url: "polyfills/boxsizing.htc";

@mixin pie($poll: none, $watch-ancestors: 0) {
  @if $pie-url {
    behavior: asset-url($pie-url, '');
    // http://css3pie.com/documentation/supported-css3-features/#pie-poll
    @if $poll != none {
      -pie-poll: $poll;
    }
    // http://css3pie.com/documentation/supported-css3-features/#pie-watch-ancestors
    @if $watch-ancestors > 0 {
      -pie-watch-ancestors: $watch-ancestors;
    }
  }
}

// TODO may be funcs, may be other (see enother realizations)
@mixin vendors($vendors, $property, $params) {
  @each $vendor in $vendors {
    -#{$vendor}-#{$property}: $params;
  }
  #{$property}: $params;
}

@mixin border-radius($params) {
  @include vendors(webkit, border-radius, $params);
  //-webkit-border-radius: $params; // iOS-Safari <= 3.2, Android <= 2.1
  //   -moz-border-radius: $params; // FF 3.6
  //        border-radius: $params;
}

@mixin border-radius_complex($params) {
  $l: length($params);
  @if $l == 4 {
    $i: 0;
    @each $corner in top-left, top-right, bottom-right, bottom-left {
      $i: $i + 1;
      $p: nth($params, $i);
      @if $p != none and $p != false {
        @include vendors(webkit, border-#{$corner}-radius, $p);
      }
    }
  } @else if $l == 2 {
    @debug "border-radius_complex don't support 2 parameters now!";
    @warn "border-radius_complex don't support 2 parameters now!";
  } @else if $l == 3 {
    @debug "border-radius_complex don't support 3 parameters now!";
    @warn "border-radius_complex don't support 3 parameters now!";
  } @else {
    @include border-rasius($params);
  }
}

@mixin box-shadow($params0, $params1: false) {
  @if $params1 {
    -webkit-box-shadow: $params0, $params1; // Safari 5.0, iOS-Safari <= 4.3, Android <= 4.0      missing "inset" and blur radius value support for iOS-Safari <= 3.2, Android <= 3.0
            box-shadow: $params0, $params1;
  } @else {
    -webkit-box-shadow: $params0;
            box-shadow: $params0;
  }
}

@mixin box-sizing($params: border-box) {
  -webkit-box-sizing: $params; // Safari <= 5.0, iOS-Safari <= 4.3, Android <= 3.0
     -moz-box-sizing: $params; // actual
          box-sizing: $params;
  @if $boxsizing-url {
    // https://github.com/Schepp/box-sizing-polyfill
    *behavior: asset-url($boxsizing-url, ''); // IE 6-7
  }
}

// !!! EXPERIMENTAL !!!
// @include linear-gradient(white, $c-black, left)
@mixin linear-gradient($color_start, $color_stop, $start: top, $color_middle: none, $percent_middle: 50%) {
  // TODO: colors as list argument
  $wk_start: left top;
  $wk_stop: left bottom;
  @if $start == top {
    $wk_start: left top;
    $wk_stop: left bottom;
  } @else if $start == bottom {
    $wk_start: left bottom;
    $wk_stop: left top;
  } @else if $start == left {
    $wk_start: left top;
    $wk_stop: right top;
  } @else if $start == right {
    $wk_start: right top;
    $wk_stop: left top;
  }
  $bg-color: $color_middle;
  $wk-colors: "from(#{$color_start})";
  $colors: "#{$color_start}";
  @if $color_middle != none {
    $wk-colors: "#{$wk-colors}, color-stop(#{$percent_middle}, #{$color_middle})";
    $colors: "#{$colors}, #{$color_middle} #{$percent_middle}";
  } @else {
    $bg-color: mix($color_start, $color_stop);
  }
  $wk-colors: "#{$wk-colors}, to(#{$color_stop})";
  $colors: "#{$colors}, #{$color_stop}";
  background-color: $bg-color;
  // TODO: $color_middle leave out
  @if $color_start != $color_stop {
    background-image: -webkit-gradient(linear, $wk_start, $wk_stop, unquote($wk-colors)); // old webkit (Safari <= 5.0, iOS-Safari <= 4.3, Android <= 3.0)
    // TODO may be new -webkit-gradient?
    background-image:       -moz-linear-gradient($start, unquote($colors)); // actual
    background-image:        -ms-linear-gradient($start, unquote($colors)); // IE 10+
    background-image:         -o-linear-gradient($start, unquote($colors)); // Opera 11.10+
    // TODO: conflict with Compass
    //background-image:            linear-gradient($start, unquote($colors)); // future
    @if $pie-url {
    // TODO: conflict with Compass
    //  -pie-background: $bg-color linear-gradient($start, unquote($colors)); // IE 6-9
    }
  }
}

@mixin border-gradient($color_start, $color_stop, $is_horizontal: false) {
  $start: top;
  $wk_start: left top;
  $wk_stop: left bottom;
  @if $is_horizontal {
    $start: left;
    $wk_stop: right top;
  } @else {
    $start: top;
    $wk_stop: left bottom;
  }
  border-color: $color_start mix($color_start, $color_stop) $color_stop;
  -webkit-border-image: -webkit-gradient(linear, $wk_start, $wk_stop, from($color_start), to($color_stop)); // old webkit (Safari <= 5.0, iOS-Safari <= 4.3, Android <= 3.0)
  // TODO may be new -webkit-gradient?
  -moz-border-image: -moz-linear-gradient($start, $color_start, $color_stop); // actual
    -o-border-image:  -ms-linear-gradient($start, $color_start, $color_stop); // IE 10+
    -o-border-image:   -o-linear-gradient($start, $color_start, $color_stop); // Opera 11.10+
       border-image:      linear-gradient($start, $color_start, $color_stop); // future
}

@mixin opacity($value: 0.5) {
  opacity: $value;
  $value: $value * 100;
  @if $value < 100 {
    filter: progid:DXImageTransform.Microsoft.Alpha(opacity=#{$value});
  } @else {
    filter: progid:DXImageTransform.Microsoft.Alpha(enabled=false);
  }
}

@mixin pie-bg($bg) {
  background: $bg;
  @if $pie-url {
    -pie-background: $bg;
  }
}

@mixin text-shadow($color, $params: none, $direction: 180, $strength: 1) {
  @if $color == none {
    text-shadow: none;
    //filter: progid:DXImageTransform.Microsoft.Shadow(enabled=false);
  } @else {
    text-shadow: $color $params;
    //filter: progid:DXImageTransform.Microsoft.Shadow(Color=#{$color}, Direction=#{$direction}, strength=#{$strength});
  }
}

@mixin ellipsis($overflow: hidden) {
  @if $overflow != false {
    overflow: $overflow;
  }
  -o-text-overflow: ellipsis; // Opera Mini and Opera Mobile
     text-overflow: ellipsis; // all
}


@mixin transition($what, $time, $method: ease) {
  -webkit-transition: $what $time $method; // actual
     -moz-transition: $what $time $method; // FF 8+
      -ms-transition: $what $time $method; // IE 10+
       -o-transition: $what $time $method; // Opera 11.6+
       // transition: $what $time $method; // future
}

@mixin transform($params) {
  -webkit-transform: $params; // actual
     -moz-transform: $params; // actual
      -ms-transform: $params; // IE 9+
       -o-transform: $params; // actual
       // transform: $params; // future
}

// TODO
//@mixin placeholder {
//  &::-webkit-input-placeholder { color: #a3a3a3; }
//  &:-moz-placeholder {
//    color: #a3a3a3;
//  }
//input::-webkit-input-placeholder { color: #a3a3a3 !important;}
//input:-moz-placeholder { color: #a3a3a3 !important; }
